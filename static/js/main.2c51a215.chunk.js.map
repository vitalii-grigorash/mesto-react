{"version":3,"sources":["images/svg/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/Api.js","utils/utils.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","handleClick","props","onCardClick","handleLikeClick","onCardLike","card","handleDeleteClick","onCardDelete","this","isOwn","owner","_id","context","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","name","link","onClick","length","Component","contextType","Main","handleCardClick","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","handleCardLike","handleCardDelete","Footer","PopupWithForm","onSubmit","isOpen","onClose","title","children","submit","isLoading","type","EditProfilePopup","onUpdateUser","currentUser","useContext","useState","setName","description","setDescription","useEffect","e","preventDefault","id","defaultValue","placeholder","minLength","maxLength","pattern","required","onChange","evt","target","value","EditAvatarPopup","onUpdateAvatar","inputAvatarRef","useRef","current","ref","AddPlacePopup","inputNameRef","inputLinkRef","ImagePopup","api","data","_baseUrl","baseUrl","_headers","headers","fetch","then","_returnErrorResponse","res","ok","json","Promise","reject","Error","status","formData","method","body","JSON","stringify","cardId","authorization","App","setCurrentUser","setCards","getUserInfo","userData","catch","err","console","log","getInitialCards","cardData","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","setLoading","isImageOpen","selectedCard","setSelectedCard","closeAllPopups","Provider","changeLikeCardStatus","newCard","newCards","c","removeCard","filter","setUserInfo","finally","addCard","setAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2c51a215.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","import React from 'react';\r\nimport logo from '../images/svg/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n\r\n        <header className=\"header\">\r\n\r\n            <img className=\"header__logo\" src={logo} alt=\"Логотип Место\" />\r\n\r\n        </header>\r\n    );\r\n}\r\n  \r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nclass Card extends React.Component {\r\n\r\n    static contextType = CurrentUserContext;\r\n\r\n    handleClick = () => {\r\n        this.props.onCardClick(this.props);\r\n    };\r\n\r\n    handleLikeClick = () => {\r\n        this.props.onCardLike(this.props.card);\r\n    }\r\n\r\n    handleDeleteClick = () => {\r\n        this.props.onCardDelete(this.props.card);\r\n    }\r\n\r\n  render() {\r\n\r\n    const {card} = this.props;\r\n\r\n    const isOwn = card.owner._id === this.context._id;\r\n\r\n    const cardDeleteButtonClassName = (\r\n        `elements__trash-button ${isOwn ? 'elements__trash-button_active' : ''}`\r\n    );\r\n\r\n    const isLiked = card.likes.some(i => i._id === this.context._id);\r\n\r\n    const cardLikeButtonClassName = (\r\n        `elements__like-button ${isLiked ? 'elements__like-button_active' : ''}`\r\n    );\r\n\r\n    return (\r\n\r\n        <div className=\"elements__element\">\r\n\r\n            <img className=\"elements__image\" alt={card.name} src={card.link} onClick={this.handleClick} />\r\n\r\n            <button className={`${cardDeleteButtonClassName}`} onClick={this.handleDeleteClick}></button>\r\n\r\n            <div className=\"elements__group\">\r\n\r\n                <p className=\"elements__place\">{card.name}</p>\r\n\r\n                <div className=\"elements__like-container\">\r\n\r\n                    <button className={`${cardLikeButtonClassName}`} onClick={this.handleLikeClick}></button>\r\n\r\n                    <p className=\"elements__like-count\">{card.likes.length}</p>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nclass Main extends React.Component {\r\n\r\n    static contextType = CurrentUserContext;\r\n\r\n    onCardClick = (card) => {\r\n        this.props.handleCardClick(card);\r\n    };\r\n\r\n    render () {\r\n        return (\r\n\r\n            <main className=\"content\">\r\n\r\n                <section className=\"profile\">\r\n\r\n                    <div className=\"profile__avatar-container\">\r\n\r\n                        <div className=\"profile__overlay\" onClick={this.props.onEditAvatar}></div>\r\n                        <img className=\"profile__avatar\" src={this.context.avatar} alt=\"Аватар\" />\r\n\r\n                    </div>\r\n\r\n                    <div className=\"profile__info\">\r\n\r\n                        <div className=\"profile__heading-info\">\r\n\r\n                            <p className=\"profile__name\">{this.context.name}</p>\r\n                            <button className=\"profile__edit-button\" onClick={this.props.onEditProfile}></button>\r\n\r\n                        </div>\r\n\r\n                        <p className=\"profile__job\">{this.context.about}</p>\r\n\r\n                    </div>\r\n\r\n                    <button className=\"profile__add-button\" onClick={this.props.onAddPlace}></button>\r\n\r\n                </section>\r\n\r\n                <section className=\"elements\">\r\n                    {this.props.cards.map((card) => (\r\n                        <Card \r\n                            key={card._id} \r\n                            card={card} \r\n                            onCardClick={this.onCardClick} \r\n                            onCardLike={this.props.handleCardLike} \r\n                            onCardDelete={this.props.handleCardDelete}\r\n                        />\r\n                    ))}\r\n                </section>\r\n\r\n            </main>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n\r\n        <footer className=\"footer\">\r\n\r\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n\r\n        </footer>\r\n\r\n    );\r\n}\r\n  \r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm (props) {\r\n\r\n    const { \r\n        onSubmit,\r\n        name,\r\n        isOpen,\r\n        onClose,\r\n        title,\r\n        children,\r\n        submit,\r\n        isLoading\r\n    } = props;\r\n\r\n    return (\r\n\r\n        <div\r\n            className={`popup popup_type_${name} ${isOpen && 'popup_opened'}`}\r\n        >\r\n\r\n            <div \r\n                className={`popup__container popup__container_type_${name}`}\r\n            >\r\n\r\n                <button\r\n                    type='button'\r\n                    className='popup__close-button'\r\n                    onClick={onClose}\r\n                ></button>\r\n\r\n                <form\r\n                    className={`popup__forms popup__forms_${name}`}\r\n                    onSubmit={onSubmit}\r\n                >\r\n\r\n                    <h2 className=\"popup__heading\">{title}</h2>\r\n\r\n                    \r\n                    {children}\r\n                    \r\n\r\n                    <div className=\"popup__handlers\">\r\n\r\n                        <button\r\n                            type='submit'\r\n                            className=\"popup__submit-button\"\r\n                        >\r\n                        {isLoading ? `Сохранение...` : submit}\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default PopupWithForm;","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup (props) {\r\n\r\n    const { isOpen, onClose, onUpdateUser, isLoading } = props;\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser]);\r\n\r\n    function handleNameChange(evt) {\r\n        setName(evt.target.value);\r\n    }\r\n\r\n    function handleDescriptionChange(evt) {\r\n        setDescription(evt.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n          name: name,\r\n          about: description,\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <PopupWithForm\r\n            name='edit-profile'\r\n            title='Редактировать профиль'\r\n            submit='Сохранить'\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            isLoading={isLoading}\r\n        >\r\n        \r\n            <input\r\n            type=\"text\"\r\n            className=\"popup__input popup__input_name\"\r\n            id=\"name-input\"\r\n            name=\"name\"\r\n            defaultValue={name}\r\n            placeholder='Имя'\r\n            minLength=\"2\"\r\n            maxLength=\"40\"\r\n            pattern=\"[A-Za-zа-яёА-ЯЁ -]{1,}\"\r\n            required\r\n            onChange={handleNameChange}\r\n            />\r\n            <span id=\"name-input-error\" className=\"popup__input_name-error\"></span>\r\n        \r\n        \r\n            <input\r\n            type=\"text\"\r\n            className=\"popup__input popup__input_job\"\r\n            id=\"job-input\"\r\n            name=\"job\"\r\n            defaultValue={description} \r\n            placeholder='О себе'\r\n            minLength=\"2\"\r\n            maxLength=\"200\"\r\n            required\r\n            onChange={handleDescriptionChange}\r\n            />\r\n            <span id=\"job-input-error\" className=\"popup__input_name-error\"></span>\r\n        \r\n        </PopupWithForm>\r\n    )\r\n\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup (props) {\r\n\r\n    const { isOpen, onClose, onUpdateAvatar, isLoading } = props;\r\n\r\n    const inputAvatarRef = React.useRef('');\r\n\r\n    React.useEffect(() => {\r\n        inputAvatarRef.current.value = '';\r\n    }, [isOpen]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n      \r\n        onUpdateAvatar({\r\n            avatar: inputAvatarRef.current.value \r\n        });\r\n      }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            name='avatar-edit'\r\n            title='Обновить аватар'\r\n            submit='Сохранить'\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            isLoading={isLoading}\r\n        >\r\n            <input\r\n                type=\"url\"\r\n                className=\"popup__input popup__input_avatar-edit\"\r\n                id=\"avatar-edit-input\"\r\n                name=\"link\"\r\n                placeholder=\"Ссылка на аватар\"\r\n                required\r\n                ref={inputAvatarRef}\r\n            />\r\n            <span id=\"avatar-edit-input-error\" className=\"popup__input_name-error\"></span>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup (props) {\r\n\r\n    const { isOpen, onClose, onAddPlace, isLoading } = props;\r\n\r\n    const inputNameRef = React.useRef('');\r\n    const inputLinkRef = React.useRef('');\r\n\r\n    React.useEffect(() => {\r\n        inputNameRef.current.value = '';\r\n        inputLinkRef.current.value = '';\r\n    }, [isOpen]);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onAddPlace({\r\n          name: inputNameRef.current.value,\r\n          link: inputLinkRef.current.value\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <PopupWithForm\r\n            name='new-card'\r\n            title='Новое место'\r\n            submit='Сохранить'\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            isLoading={isLoading}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                className=\"popup__input popup__input_card-name\"\r\n                id=\"card-name-input\"\r\n                name=\"name\"\r\n                placeholder=\"Название\"\r\n                minLength=\"1\"\r\n                maxLength=\"30\"\r\n                required\r\n                ref={inputNameRef}\r\n            />\r\n            <span id=\"card-name-input-error\" className=\"popup__input_name-error\"></span>\r\n        \r\n            <input\r\n                type=\"url\"\r\n                className=\"popup__input popup__input_card-link\"\r\n                id=\"card-link-input\"\r\n                name=\"link\"\r\n                placeholder=\"Ссылка на картинку\"\r\n                required\r\n                ref={inputLinkRef}\r\n            />\r\n            <span id=\"card-link-input-error\" className=\"popup__input_name-error\"></span>\r\n        \r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\n\r\nclass ImagePopup extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className={`popup popup_type_card-open ${this.props.isOpen && 'popup_opened'}`}>\r\n\r\n                <div className=\"popup__container popup__container_card-open\">\r\n\r\n                    <button className=\"popup__close-button\" type=\"button\" onClick={this.props.onClose}></button>\r\n\r\n                    <img className=\"popup__photo\" alt={this.props.name} src={this.props.link} />\r\n\r\n                    <p className=\"popup__description\">{this.props.name}</p>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default ImagePopup;","import {apiOptions} from './utils';\r\n\r\nexport class Api {\r\n    constructor(data) {\r\n        this._baseUrl = data.baseUrl;\r\n        this._headers = data.headers;\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            headers: this._headers\r\n        })\r\n        .then(this._returnErrorResponse)\r\n    }\r\n\r\n    _returnErrorResponse(res) {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        Promise.reject(new Error(`Ошибка: ${res.status}`));\r\n    }\r\n\r\n    getUserInfo () {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers\r\n        })\r\n        .then(this._returnErrorResponse)\r\n    }\r\n\r\n    setUserInfo (formData) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: formData.name,\r\n                about: formData.about,\r\n            })\r\n        })\r\n        .then(this._returnErrorResponse)\r\n    }    \r\n\r\n    setAvatar (formData) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: formData.avatar\r\n            })\r\n        })\r\n        .then(this._returnErrorResponse)\r\n    }\r\n\r\n    addCard (formData) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: formData.name,\r\n                link: formData.link,\r\n            })\r\n        })\r\n        .then(this._returnErrorResponse)\r\n    }\r\n\r\n    removeCard (cardId, isOwn) {\r\n        if (!isOwn) {\r\n            return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n                method: 'DELETE',\r\n                headers: this._headers\r\n            })\r\n            .then(this._returnErrorResponse)\r\n        }\r\n    }\r\n\r\n    changeLikeCardStatus (cardId, isLiked) {\r\n        if (isLiked) {\r\n            return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n                method: 'PUT',\r\n                headers: this._headers\r\n            })  \r\n            .then(this._returnErrorResponse) \r\n        } else {\r\n            return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n                method: 'DELETE',\r\n                headers: this._headers\r\n            })\r\n            .then(this._returnErrorResponse)    \r\n        }\r\n    }\r\n}\r\n\r\nexport const api = new Api(apiOptions);","export const apiOptions = {\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\r\n    headers: {\r\n      authorization: '23e3d2ae-f405-4f8e-a432-7a3c52096726',\r\n      'Content-Type': 'application/json'\r\n    }\r\n};","import React, { useState } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport { api } from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState({}); \n\n  const [cards, setCards] = useState([]);\n  \n  React.useEffect (() => {\n    api.getUserInfo()\n    .then((userData) => {\n      setCurrentUser(userData);\n    })\n    .catch((err) => console.log(`Ошибка: ${err}`));\n  }, []);\n\n  React.useEffect (() => {\n    api.getInitialCards()\n    .then((cardData) => {\n      setCards(cardData);\n    })\n    .catch((err) => console.log(`Ошибка: ${err}`));\n  }, [cards]);\n\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isLoading, setLoading] = useState();\n  const [selectedCard, setSelectedCard] = useState({\n    isImageOpen: false,\n    link: '',\n    name: '',\n  });\n\nfunction handleCardLike (card) {\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  api.changeLikeCardStatus(card._id, !isLiked)\n  .then((newCard) => {\n    const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n    setCards(newCards);\n  })\n  .catch((err) => console.log(`Ошибка: ${err}`));\n}\n\nfunction handleCardDelete (card) {\n  const isOwn = card.owner._id === currentUser._id;\n  api.removeCard(card._id, !isOwn)\n  .then((newCard) => {\n    const newCards = cards.filter((c) => c._id === card._id ? !newCard : c);\n    setCards(newCards);\n  })\n  .catch((err) => console.log(`Ошибка: ${err}`));\n}\n\n  function handleCardClick(cardData) {\n    const { link, name } = cardData.card;\n    setSelectedCard({ isImageOpen: true, link: link, name: name });\n  }\n\n  function handleEditAvatarClick () {\n    setEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick () {\n    setEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick () {\n    setAddPlacePopupOpen(true);\n  }\n\n  function handleUpdateUser (userData) {\n    setLoading(true);\n    api.setUserInfo(userData)\n    .then((res) => {\n      setCurrentUser(res);\n    })\n    .catch((err) => console.log(`Ошибка: ${err}`))\n    .finally(() => setLoading(false));\n    closeAllPopups();\n  }\n\n  function handleUpdateAvatar (userData) {\n    setLoading(true);\n    api.setAvatar(userData)\n    .then((res) => {\n      setCurrentUser(res);\n    })\n    .catch((err) => console.log(`Ошибка: ${err}`))\n    .finally(() => setLoading(false));\n    closeAllPopups();\n  }\n\n  function handleAddPlaceSubmit (userData) {\n    setLoading(true);\n    api.addCard(userData)\n    .then((res) =>{\n      setCards([...cards, res]);\n    })\n    .catch((err) => console.log(`Ошибка: ${err}`))\n    .finally(() => setLoading(false));\n    closeAllPopups();\n  }\n\n  function closeAllPopups() {\n    setEditProfilePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard({\n      isImageOpen: false,\n      link: '',\n      name: ''\n    });\n  }\n\n  return (\n    \n    <CurrentUserContext.Provider value={currentUser}>\n\n    <div className=\"page\">\n\n      <Header />\n\n      <Main\n        onEditProfile={handleEditProfileClick}\n        onAddPlace={handleAddPlaceClick}\n        onEditAvatar={handleEditAvatarClick}\n        handleCardClick={handleCardClick}\n        handleCardLike={handleCardLike}\n        handleCardDelete={handleCardDelete}\n        cards={cards}\n      />\n\n      <Footer />\n\n      <EditProfilePopup \n        isOpen={isEditProfilePopupOpen} \n        onClose={closeAllPopups} \n        onUpdateUser={handleUpdateUser} \n        isLoading={isLoading}\n      />\n\n      <AddPlacePopup \n        isOpen={isAddPlacePopupOpen} \n        onClose={closeAllPopups}\n        onAddPlace={handleAddPlaceSubmit}\n        isLoading={isLoading}\n      />\n\n      <EditAvatarPopup \n        isOpen={isEditAvatarPopupOpen} \n        onClose={closeAllPopups} \n        onUpdateAvatar={handleUpdateAvatar} \n        isLoading={isLoading}\n      />\n\n      <PopupWithForm\n\n        name=\"card-remove\"\n        title= \"Вы уверены?\"\n        submit=\"Да\"\n        onClose={closeAllPopups}\n\n      ></PopupWithForm>\n\n      <ImagePopup\n        name={selectedCard.name}\n        link={selectedCard.link}\n        onClose={closeAllPopups}\n        isOpen={selectedCard.isImageOpen}\n      />\n      \n    </div>\n\n    </CurrentUserContext.Provider> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}